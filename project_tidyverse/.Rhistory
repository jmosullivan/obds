renv:init()
install.packages("renv")
renv:init()
??renv
renv:init()
renv::init()
renv::init()
install.packages("BiocManager")
BiocManager::install(c("cowplot", "gridExtra", "patchwork", "biomaRt", "pheatmap", "tidyverse"))
BiocManager::value
BiocManager::value()
BiocManager::valid()
renv::status()
renv::snapshot()
?renv::snapshot()
library(patchwork)
library(tidyverse)
library(gridExtra)
library(cowplot)
library(patchwork)
data("mtcars")
head(mtcars)
str(mtcars)
barplot(table(mtcars$gear),
xlab="number og gears",
ylab="A main title\nspread across two lines",
col = "red",
abline(h=6, lwd=70))
barplot(table(mtcars$gear),
xlab="number og gears",
ylab="A main title\nspread across two lines",
col = "red")
plot(mtcars$mpg, mtcars$hp,
col = mtcars$gear,
pch = 16,
cex = 6,
xlab = "miles per gallon",
ylab = "Horse power",
cex.lab = 2)
abline(h=6, lwd=70)
colours <- c("red", "green", "blue")
names(colours) <-c(3,4,5)
colours
gears_column<-mtcars$gears
subset(gears_column[1])
gears_column[1]
gears_column
mtcars$gear
gears_column<-mtcars$gear
gears_column
gears_column<-as.character(mtcars$gear)
colours[gears_column]
gears_column
plot(mtcars$mpg, mtcars$hp,
col = colours[gears_column],
pch = 16,
cex = 6,
xlab = "miles per gallon",
ylab = "Horse power",
cex.lab = 2)
legend(legend = sort(unique(mtcars$gears)),
x = "right"
fill = c("red", "green", "blue"))
legend(legend = sort(unique(mtcars$gears)),
x = "right",
fill = c("red", "green", "blue"))
legend(legend = sort(unique(mtcars$gear)),
x = "right",
fill = c("red", "green", "blue"))
a <- barplot(table(mtcars$gear),
xlab="number of gears",
ylab="A main title\nspread across two lines",
col = "red")
abline(h=6, lwd=70)
colours <- c("red", "green", "blue")
names(colours) <-c(3,4,5)
gears_column<-as.character(mtcars$gear)
gears_column
colours[gears_column] #subsetting gears_column by colour
b <- plot(mtcars$mpg, mtcars$hp,
col = colours[gears_column],
pch = 16,
cex = 6,
xlab = "miles per gallon",
ylab = "Horse power",
cex.lab = 2)
par(mfrow = c(1,2))
a
b
a <- barplot(table(mtcars$gear),
xlab="number of gears",
ylab="A main title\nspread across two lines",
col = "red")
colours <- c("red", "green", "blue")
names(colours) <-c(3,4,5)
gears_column<-as.character(mtcars$gear)
gears_column
colours[gears_column] #subsetting gears_column by colour
b <- plot(mtcars$mpg, mtcars$hp,
col = colours[gears_column],
pch = 16,
cex = 6,
xlab = "miles per gallon",
ylab = "Horse power",
cex.lab = 2)
legend(legend = sort(unique(mtcars$gear)),
x = "right",
fill = c("red", "green", "blue"))
par(mfrow = c(1,2))
a
b
data("coding_gene_region")
install.packages("BiomaRt")
install.packages("biomaRt")
BiocManager::install("biomaRt")
getwd()
library(biomaRt)
library(pheatmap)
sample_table <- read_tsv("obds_sampletable.tsv")
counts_table<- read_tsv("obds_countstable.tsv.gz")
View(counts_table)
View(sample_table)
View(sample_table)
processed_sample_table <- sample_table %>%
pivot_longer(-Geneid, names_to = "sample", values_to = "count")
View(counts_table)
processed_counts_table <- counts_table %>%
pivot_longer(-Geneid, names_to = "sample", values_to = "count")
processed_counts
processed_counts_table <- counts_table %>%
pivot_longer(-Geneid, names_to = "sample", values_to = "count")
processed_counts_table
library("biomaRt")
ensembl<-useMart("ensembl")
ensembl<-useMart("ensembl")
datasets <- listDatasets(ensembl)
ensembl = useDataset("hsapiens_gene_ensemb', mart=ensembl)
en
#              values_drop_na = TRUE) %>%
#   separate(mouse_typeofcount, c("Mouse_ID", "count_type"), sep = "_") %>%
#  pivot_wider(names_from = count_type, values_from = count)
ensembl = useDataset("hsapiens_gene_ensembl', mart=ensembl)
#              values_drop_na = TRUE) %>%
#   separate(mouse_typeofcount, c("Mouse_ID", "count_type"), sep = "_") %>%
#  pivot_wider(names_from = count_type, values_from = count)
ensembl = useDataset("hsapiens_gene_ensembl', mart=ensembl)
ensembl
ensembl = useDataset("hsapiens_gene_ensembl', mart=ensembl)
ensembl
ensembl = useMart(dataset = "mmusculus_gene_ensembl", mart=ensembl)
ensembl = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
ensembl
head(ensembl)
ensembl <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
head(ensembl)
library(tidyverse)
library(biomaRt)
library(pheatmap)
#tidy count file - 3 cols
sample_table <- read_tsv("data/obds_sampletable.tsv")
count_table <- read_tsv("data/obds_countstable.tsv.gz")
#tidy count file - 3 cols
sample_table <- read_tsv("/obds_sampletable.tsv")
#tidy count file - 3 cols
sample_table <- read_tsv("~/obds_sampletable.tsv")
count_table <- read_tsv("~/obds_countstable.tsv.gz")
#tidy count file - 3 cols
sample_table <- read_tsv("obds_sampletable.tsv")
count_table <- read_tsv("obds_countstable.tsv.gz")
View(sample_table)
processed_counttable <- count_table %>%
pivot_longer(-Geneid, names_to = "sample", values_to = "count")
View(processed_counttable)
#join with gene info to get mgi_symbol
listMarts()
ensembl <- useMart("ensembl") #connecting to specific database
datasets <- listDatasets(ensembl) #list dataset
head(datasets)
ensembl <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
View(ensembl)
filters <- listFilters(ensembl)
filters[1:5,]
View(filters)
attributes = listAttributes(ensembl)
attributes[1:5,]
View(attributes)
#matching
matching <- getBM(attributes = c("ensembl_gene_id", "mgi_symbol"),
values = unique(processed_counttable$Geneid),
mart = ensembl)
#remove duplicates
View(matching)
BiocManager::install('grimbough/biomaRt')
